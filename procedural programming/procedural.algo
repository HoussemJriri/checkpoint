PROCEDURE Dot_product (v1 ,v2 :Array of FLOAT[] ,VAR ps :FLOAT)
VAR
    i: INTEGER;
BEGIN
    ps:=0 ;
    IF (v1.length = v2.length) THEN
        FOR i FROM 0 TO v1.length  DO
                ps := ps + (v1[i]*v2[i]);   
        END_FOR
        IF (ps=0) THEN
                    write ('v1 and v2 are orthogonal')
                    ELSE
                        write('v1 and v2 are not orthogonal')
                    END_IF
  END_IF
END
//--------------------------------------------

// This is a Function ----------------
FUNCTION DotofProduct(ps) : FLOAT ;
VAR
    i: INTEGER;
BEGIN
    ps:=0
    IF (v1.length = v2.length) THEN
        FOR i FROM 0 TO v1.length  DO
                ps := ps + (v1[i]*v2[i]);
         END_FOR

    END_IF 
      RETURN ps ;
END
//------------------------------------



ALGORITHM Calculate Myscalar
VAR
    i , n : INTEGER ;
    v1 ,v2 : ARRAY_OF FLOAT[100];
    Myscalar :FLOAT :=0
BEGIN
 read (v1,v2);
 Dot_product(v1,v2,ps);
 DotofProduct(Myscalar);
 write(Myscalar;)

    
END